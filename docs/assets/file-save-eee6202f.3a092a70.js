var m=async(t,e=[{}],s=null,r=!1,p=null)=>{Array.isArray(e)||(e=[e]),e[0].fileName=e[0].fileName||"Untitled";const c=[];let a=null;if(t instanceof Blob&&t.type?a=t.type:t.headers&&t.headers.get("content-type")&&(a=t.headers.get("content-type")),e.forEach((i,o)=>{c[o]={description:i.description||"",accept:{}},i.mimeTypes?(o===0&&a&&i.mimeTypes.push(a),i.mimeTypes.map(d=>{c[o].accept[d]=i.extensions||[]})):a&&(c[o].accept[a]=i.extensions||[])}),s)try{await s.getFile()}catch(i){if(s=null,r)throw i}console.log({suggestedName:e[0].fileName,id:e[0].id,startIn:e[0].startIn,types:c,excludeAcceptAllOption:e[0].excludeAcceptAllOption||!1});const l=s||await window.showSaveFilePicker({suggestedName:e[0].fileName,id:e[0].id,startIn:e[0].startIn,types:c,excludeAcceptAllOption:e[0].excludeAcceptAllOption||!1});!s&&p&&p();const n=await l.createWritable();return"stream"in t?(await t.stream().pipeTo(n),l):"body"in t?(await t.body.pipeTo(n),l):(await n.write(blob),await n.close(),l)};export{m as default};
